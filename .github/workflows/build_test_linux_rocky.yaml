name: Build & Test RockyLinux

on:
  push:
  pull_request:
    types: [opened, synchronize, reopened]

## Build ##

jobs:
  linux-rocky:
    name: Build on Rocky Linux
    runs-on: ubuntu-latest
    container: sogno/dpsim:dev-rocky
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Create Build Environment
      run: mkdir build

    - name: Cache build directory
      uses: actions/cache@v4
      with:
        path: ${{ github.workspace }}/build
        key: build-cache-rocky-${{ github.ref }}

    - name: Configure CMake
      shell: bash
      working-directory: ${{ github.workspace }}/build
      run: cmake $GITHUB_WORKSPACE -DFETCH_SPDLOG=ON

    - name: Build every target
      shell: bash
      working-directory: ${{ github.workspace }}/build
      run: cmake --build . --parallel $(nproc)

  linux-rocky-clang:
    name: Build on Rocky Linux using Clang
    runs-on: ubuntu-latest
    container: sogno/dpsim:dev-rocky
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Create Build Environment
      run: mkdir build

    - name: Cache build directory
      uses: actions/cache@v4
      with:
        path: ${{ github.workspace }}/build
        key: build-cache-rocky-clang-${{ github.ref }}

    - name: Configure CMake
      shell: bash
      working-directory: ${{ github.workspace }}/build
      run: cmake $GITHUB_WORKSPACE -DFETCH_SPDLOG=ON -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER=clang -DWITH_PYBIND=OFF

    - name: Build every target
      shell: bash
      working-directory: ${{ github.workspace }}/build
      run: cmake --build . --parallel $(nproc)