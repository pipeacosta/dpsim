# This Dockerfile is used to build Python wheels for uploading
# binary releases of DPsim to PyPi.org
#
# See: https://github.com/pypa/manylinux

FROM quay.io/pypa/manylinux_2_28_x86_64

ARG CIM_VERSION=CGMES_2.4.15_16FEB2016
ARG VILLAS_VERSION=c976cd62d8c6667a078be0785ca3e623a05f7456

ARG CMAKE_OPTS
ARG MAKE_OPTS=-j4

ENV PLAT=manylinux_2_28_x86_64

LABEL \
	org.opencontainers.image.title = "DPsim" \
	org.opencontainers.image.licenses = "MPL 2.0" \
	org.opencontainers.image.url = "http://dpsim.fein-aachen.org/" \
	org.opencontainers.image.source = "https://github.com/sogno-platform/dpsim"

RUN dnf -y update
RUN yum install -y epel-release

# Toolchain
RUN yum install -y \
	gcc-toolset-11 clang \
	git \
	rpmdevtools rpm-build \
	make cmake pkgconfig \
	python3-pip \
	cppcheck

# Tools needed for developement
RUN dnf -y install \
	doxygen graphviz \
	gdb \
	procps-ng

# Dependencies
RUN dnf --refresh -y install \
	python3-devel \
	eigen3-devel \
	libxml2-devel \
	graphviz-devel

RUN yum install -y fmt-devel

# Install some debuginfos
RUN dnf -y debuginfo-install \
	python3

# Build & Install sundials
RUN cd /tmp && \
	git clone --branch v3.2.1 --recurse-submodules --depth 1 https://github.com/LLNL/sundials.git && \
	mkdir -p sundials/build && cd sundials/build && \
	cmake ${CMAKE_OPTS} .. \
		-DCMAKE_BUILD_TYPE=Release && \
	make ${MAKE_OPTS} install

# CIMpp and VILLASnode are installed here
ENV LD_LIBRARY_PATH="/usr/local/lib64:${LD_LIBRARY_PATH}"

# Python dependencies
ADD requirements-manylinux.txt .
RUN pip3 install --upgrade wheel build
RUN pip3 install -r requirements-manylinux.txt

# Install CIMpp from source
RUN cd /tmp && \
	git clone --recurse-submodules --depth 1 https://github.com/cim-iec/libcimpp.git && \
	mkdir -p libcimpp/build && cd libcimpp/build && \
	cmake ${CMAKE_OPTS} .. \
		-DCMAKE_INSTALL_LIBDIR=/usr/local/lib64 \
		-DUSE_CIM_VERSION=${CIM_VERSION} \
		-DBUILD_SHARED_LIBS=ON \
		-DBUILD_ARABICA_EXAMPLES=OFF && \
	make ${MAKE_OPTS} install && \
	rm -rf /tmp/libcimpp

# Install VILLASnode dependencies
RUN yum install -y \
	openssl-devel \
	libuuid-devel \
	libcurl-devel \
	jansson-devel \
	libwebsockets-devel \
	mosquitto-devel \
	libconfig-devel \
	libnl3-devel

# Install spdlog from source
RUN cd /tmp && \
	git clone --branch v1.6.1 --recurse-submodules --depth 1 https://github.com/gabime/spdlog.git && \
	mkdir -p spdlog/build && cd spdlog/build && \
	cmake ${CMAKE_OPTS} .. \
		-DCMAKE_POSITION_INDEPENDENT_CODE=True \
		-DCMAKE_INSTALL_LIBDIR=/usr/local/lib64 && \
	make ${MAKE_OPTS} install && \
	rm -rf /tmp/spdlog

# Install VILLASnode from source
RUN cd /tmp && \
	git clone --recurse-submodules https://github.com/VILLASframework/node.git villas-node && \
	mkdir -p villas-node/build && cd villas-node/build && \
	git checkout ${VILLAS_VERSION} && \
	cmake ${CMAKE_OPTS} .. \
		-DCMAKE_C_COMPILER:FILEPATH=/opt/rh/gcc-toolset-11/root/usr/bin/gcc \
		-DCMAKE_CXX_COMPILER:FILEPATH=/opt/rh/gcc-toolset-11/root/usr/bin/g++ \
		-DCMAKE_INSTALL_LIBDIR=/usr/local/lib64 \
		-DDOWNLOAD_GO=OFF && \
	make ${MAKE_OPTS} install && \
	rm -rf /tmp/villas-node

ENV CMAKE_OPTS="-DCMAKE_C_COMPILER:FILEPATH=/opt/rh/gcc-toolset-11/root/usr/bin/gcc -DCMAKE_CXX_COMPILER:FILEPATH=/opt/rh/gcc-toolset-11/root/usr/bin/g++"
